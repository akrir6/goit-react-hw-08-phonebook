{"version":3,"file":"static/js/403.15d60fc1.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","pages/ContactsPage/ContactsPage.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/BadRequest/BadRequest.styled.jsx","components/BadRequest/BadRequest.jsx","components/ContactCard/ContactCard.styled.jsx","components/ContactCard/ContactCard.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(c => c.name.toLowerCase().includes(normalizedFilter));\n  }\n);\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  \n  \n  h2{\n    padding: 8px;\n    background-color:#CCEBE8;\n    color:#1F4E49;\n  }\n`","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n    background-color: #F2F2F2;\n    padding: 8px;\n    border: 1px solid #CCEBE8;\n    color: #1F4E49;\n`\n\n\nexport const Form = styled.form`\n    display: inline-block;\n    padding: 8px;\n    background-color: #F2F2F2;\n    text-align: center;    \n`\n\nexport const Label=styled.label`\n    display: flex;\n    gap: 8px;\n    padding: 8px;\n    height: 20px;\n    justify-content: space-between;\n    align-items:center;\n    font-size: small;\n`\n\nexport const Input=styled.input`\n    border:1px solid #1F4E4950;\n    border-radius: 0;\n    color: #1F4E49;\n    font-size: medium;\n    outline: none;\n\n    :hover,\n    :focus{\n        border-color: #1F4E49;\n    }\n`\n\nexport const Button = styled.button`\n    margin-top: 8px;\n    padding: 4px;\n    background-color: #1F4E49;\n    color: #F2F2F2;\n    border:none;\n    font-size: small;\n    outline: none;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1), \n        color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n\n    :hover,\n    :focus {\n        background-color: #FF931E;\n        color: #1F4E49;\n    }\n`","import { useState } from \"react\";\nimport { Input, Label, Button, Form, Container } from \"./ContactForm.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addNewContact } from \"redux/contacts/operations\";\nimport { selectContacts } from \"redux/contacts/selectors\";\n\nexport const ContactForm = ()=> {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  \n  const handleAddContact = (e) => {\n    e.preventDefault();\n    if (contacts.find(c => c.name === name)) {\n      return alert(`${name} already exists in contacts list.`);\n    }\n\n    dispatch(addNewContact({ name, number }));\n    resetForm();\n  }\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  }\n  \n  return (\n    <Container>\n      <Form onSubmit={handleAddContact}>\n        <Label>\n          Name \n          <Input\n            type=\"text\"\n            value={name}\n            onChange={(e)=>setName(e.currentTarget.value)}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Phone\n          <Input\n            type=\"tel\"\n            value={number}\n            onChange={(e)=>setNumber(e.currentTarget.value)}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">\n          Add contact\n        </Button>\n      </Form>\n    </Container>\n  )\n}\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\n    display: flex;\n    padding: 8px;\n    gap:8px;\n    height: 20px;\n    background-color: #CCEBE8;\n    align-items:center;\n`\n\nexport const Input = styled.input`\n    border:1px solid #1F4E4950;\n    border-radius: 0;\n    color: #1F4E49;\n    font-size: medium;\n    outline: none;\n\n    :hover,\n    :focus{\n        border-color: #1F4E49;\n    }\n`\n","\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFilter } from \"redux/contacts/selectors\";\nimport { setFilter } from \"redux/contacts/slice\";\n\nimport { Label, Input } from \"./Filter.styled\";\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const onChangeFilter = e => dispatch(setFilter(e.currentTarget.value));\n    \n    return (\n        <Label>Find contacts by name\n            <Input type=\"text\" name=\"filter\" value={useSelector(selectFilter)} onChange={onChangeFilter} />\n        </Label>\n    )\n}\n\n","import styled from \"@emotion/styled\";\n\nexport const BadRequestWrapper=styled.div`\n    margin-top: 16px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align:center;\n    font-size: 18px ;\n    font-weight: 700;\n    color: #1F4E49;\n`","import PropTypes from 'prop-types'\nimport { MdOutlineBrokenImage } from \"react-icons/md\";\nimport { BadRequestWrapper } from \"./BadRequest.styled\";\n\nexport const BadRequest = ({children}) => {\n    return (\n        <BadRequestWrapper>\n            <p>{children}</p>\n            <MdOutlineBrokenImage size={60} />\n        </BadRequestWrapper>\n    )\n}\n\nBadRequest.propTypes = {\n    children: PropTypes.string,    \n}","import styled from \"@emotion/styled\";\n\nexport const Text = styled.span`\ndisplay: block;\n    padding:  8px;\n    width: 200px;\n `\nexport const Button = styled.button`\n    margin: 0;\n    padding: 4px;\n    background-color: #1F4E49;\n    color: #F2F2F2;\n    border:none;\n    font-size: small;\n    outline: none;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1), \n        color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n\n    :hover,\n    :focus {\n        background-color: #FF931E;\n        color: #1F4E49;\n    }\n`","import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { removeContact } from \"redux/contacts/operations\";\nimport { Text, Button } from \"./ContactCard.styled\";\n\nexport const ContactCard = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            <Text>{name}</Text>\n            <Text>{number}</Text>\n            <Button type=\"button\" onClick={()=>dispatch(removeContact(id))}>Delete</Button>\n        </>\n    )\n}\n\nContactCard.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n}","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n    color:#1F4E49;\n    font-size: large;\n`\nexport const ListItem = styled.li`\n    display: flex;\n    margin-top: 4px;\n    height: 40px;\n    align-items: center;\n    justify-content: space-between;\n    background-color: #F2F2F2;\n    border-bottom:1px solid #1F4E49;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1), \n        border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover,\n    :focus{\n        border-color: #FF931E;\n        background-color: #CCEBE8;\n    }\n`","\nimport { ContactCard } from \"components/ContactCard/ContactCard\";\nimport { useSelector } from \"react-redux\";\nimport { selectFilteredContacts } from \"redux/contacts/selectors\";\nimport { List, ListItem } from \"./ContactList.styled\";\n\nexport const ContactList = () => {\n\n    return (\n        <List>\n            {useSelector(selectFilteredContacts).map(({ id, name, number })=>(\n            <ListItem key={id}>\n                <ContactCard id={id} name={name} number={number}/>\n            </ListItem>\n            ))}\n        </List>\n    )\n\n}\n\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { selectError, selectIsLoading } from \"redux/contacts/selectors\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { Container } from \"./ContactsPage.styled\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { BadRequest } from \"components/BadRequest/BadRequest\";\nimport { ContactList } from \"components/ContactList/ContactList\";\n\n\n\nconst ContactsPage = () => {\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && <Loader />}\n      {error && <BadRequest>Something went wrong</BadRequest>}\n      <ContactList />\n    </Container>\n  )\n}\n\nexport default ContactsPage;\n\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","normalizedFilter","toLowerCase","c","includes","Container","styled","Form","Label","Input","Button","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","resetForm","onSubmit","e","preventDefault","alert","addNewContact","type","onChange","currentTarget","pattern","title","required","Filter","setFilter","BadRequestWrapper","BadRequest","children","size","Text","ContactCard","id","onClick","removeContact","List","ListItem","ContactList","useEffect","fetchContacts","Loader"],"sourceRoot":""}